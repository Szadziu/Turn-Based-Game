(function(){"use strict";var t={3998:function(t,e,s){var a=s(8935),n=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{attrs:{id:"app"}},[t.isGame?t._e():s("div",{staticClass:"menu__choose-hero animate__animated animate__slideInDown"},t._l(t.heroesPool,(function(e,a){return s("FancyButton",{key:a,class:"hero--"+e.name,on:{click:function(e){return t.startGame(a+1)}}},[t._v(" "+t._s(e.name)+" ")])})),1),s("div",{staticClass:"battle__container"},[t.isGame?s("div",{staticClass:"battle__characters-container"},[s("CharacterCard",{attrs:{char:t.currentHero}}),s("CharacterCard",{attrs:{char:t.currentMonster}})],1):t._e(),t.isGame?s("div",{staticClass:"battle__actions-container"},[s("div",{staticClass:"battle__hero-actions"},[s("FancyButton",{class:"character--attack",attrs:{disabled:t.currentHero.getAnimationsFlag("blocked")||t.currentMonster.getAnimationsFlag("blocked")},on:{click:function(e){return t.heroTurn(t.ACTIONS_ENUM.MELEE)}}},[t._v(" attack ")]),s("FancyButton",{class:"character--spell",attrs:{disabled:t.currentHero.getAnimationsFlag("blocked")||t.currentMonster.getAnimationsFlag("blocked")},on:{click:function(e){return t.heroTurn(t.ACTIONS_ENUM.MAGIC)}}},[t._v(" cast spell ")]),s("FancyButton",{class:"character--heal",attrs:{disabled:t.currentHero.getCooldown("healing")>0||t.currentHero.getAnimationsFlag("blocked")||t.currentMonster.getAnimationsFlag("blocked")},on:{click:function(e){return t.heroTurn(t.ACTIONS_ENUM.HEAL)}}},[t._v(" heal "+t._s(t.currentHero.getCooldown("healing")?"("+t.currentHero.getCooldown("healing")+")":"")+" ")]),s("FancyButton",{class:"character--special",attrs:{disabled:t.currentHero.getCooldown("special")>0||t.currentHero.getAnimationsFlag("blocked")||t.currentMonster.getAnimationsFlag("blocked")},on:{click:function(e){return t.heroTurn("SPECIAL")}}},[t._v(" special attack "+t._s(t.currentHero.getCooldown("special")?"("+t.currentHero.getCooldown("special")+")":"")+" ")])],1),s("ul",{staticClass:"battle__actions-list"},t._l(t.lastActions,(function(e,a){return s("li",{key:a,staticClass:"animate__animated animate__fadeInUp"},[t._v(" "+t._s(e)+" ")])})),0),t.isGame?s("FancyButton",{staticClass:"skills",attrs:{disabled:!t.availableCredits},on:{click:function(e){return t.toggleCreditsManager()}}},[t._v(" "+t._s("skill points: "+t.availableCredits))]):t._e()],1):t._e(),t.isCreditsManagerOpen?s("div",{staticClass:"credits-manager"},[s("a",{staticClass:"icons-link",attrs:{href:"https://www.flaticon.com",target:"_blank"}},[t._v("All icons created by authors from Flaticon")]),s("FancyButton",{staticClass:"close",on:{click:function(e){return t.toggleCreditsManager()}}},[t._v(" X ")]),s("p",{staticClass:"credits-manager__feature credits-manager__title"},[t._v("Available credits: "+t._s(t.availableCredits)+" points")]),t._m(0),s("div",{staticClass:"credits-manager__feature"},[s("FancyButton",{staticClass:"update-stats",on:{click:function(e){return t.updateHeroStats("combatEfficiency")}}},[t._v(" +1 ")]),s("FancyButton",{staticClass:"update-stats",on:{click:function(e){return t.updateHeroStats("magicKnowledge")}}},[t._v(" +1 ")]),s("FancyButton",{staticClass:"update-stats",on:{click:function(e){return t.updateHeroStats("currentHealth")}}},[t._v(" +3 ")])],1)],1):t._e()]),!t.isGame&&t.currentHero?s("div",{staticClass:"battle__results animate__animated animate__rubberBand"},[t._v(" Results: Defeated monsters: "+t._s(t.defeatedMonsters)+" "),t.currentHero.currentHealth>0?s("p",[t._v("Congratulations you defeated all monsters !")]):s("p",[t._v("Oh no... You lose. Maybe try again ?")])]):t._e()])},i=[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"credits-manager__feature"},[s("span",{staticClass:"credits-manager__feature-item"},[t._v(" Combat Efficiency ")]),s("span",{staticClass:"credits-manager__feature-item"},[t._v(" Magic Knowledge ")]),s("span",{staticClass:"credits-manager__feature-item"},[t._v(" Maximum Health ")])])}];const r=Object.freeze({MELEE:"MELEE",MAGIC:"MAGIC",HEAL:"HEAL",SPECIAL:"SPECIAL"}),o=[{id:"_h1",name:"viking",health:70,combatEfficiency:10,magicKnowledge:10,img:"assets/heroes/viking.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/dead.wav",block:"assets/sounds/block.wav"}},{id:"_h2",name:"wizard",health:30,combatEfficiency:2,magicKnowledge:18,img:"assets/heroes/wizard.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/dead.wav",block:"assets/sounds/block.wav"}},{id:"_h3",name:"rogue",health:50,combatEfficiency:14,magicKnowledge:4,img:"assets/heroes/rogue.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/dead.wav",block:"assets/sounds/block.wav"}},{id:"_h4",name:"knight",health:60,combatEfficiency:13,magicKnowledge:8,img:"assets/heroes/knight.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/dead.wav",block:"assets/sounds/block.wav"}},{id:"_h5",name:"archer",health:40,combatEfficiency:16,magicKnowledge:3,img:"assets/heroes/archer.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/dead.wav",block:"assets/sounds/block.wav"}},{id:"_h6",name:"druid",health:55,combatEfficiency:10,magicKnowledge:8,img:"assets/heroes/druid.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/dead.wav",block:"assets/sounds/block.wav"}}],l=[{id:"_m1",name:"gnome",level:1,health:15,combatEfficiency:10,magicKnowledge:2,img:"assets/monsters/gnome.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m2",name:"goblin",level:1,health:18,combatEfficiency:4,magicKnowledge:4,img:"assets/monsters/goblin.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m3",name:"imp",level:1,health:10,combatEfficiency:7,magicKnowledge:1,img:"assets/monsters/imp.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m4",name:"ogre",level:2,health:30,combatEfficiency:3,magicKnowledge:2,img:"assets/monsters/ogre.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m5",name:"troll",level:2,health:35,combatEfficiency:13,magicKnowledge:11,img:"assets/monsters/troll.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m6",name:"dragon",level:2,health:50,combatEfficiency:15,magicKnowledge:15,img:"assets/monsters/dragon.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m7",name:"giant",level:3,health:40,combatEfficiency:30,magicKnowledge:1,img:"assets/monsters/giant.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m8",name:"reaper",level:3,health:22,combatEfficiency:8,magicKnowledge:25,img:"assets/monsters/reaper.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m9",name:"harpy",level:3,health:36,combatEfficiency:12,magicKnowledge:12,img:"assets/monsters/harpy.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}},{id:"_m10",name:"vampire",level:4,health:66,combatEfficiency:9,magicKnowledge:11,img:"assets/monsters/vampire.png",sounds:{attack:"assets/sounds/sword.wav",spell:"assets/sounds/spell.wav",dead:"assets/sounds/monsterDying.wav",block:"assets/sounds/block.wav"}}];function c(t=0,e=100){let s=e-t,a=Math.random();return a=Math.floor(a*s),a+=t,a}class d{constructor({id:t,name:e,health:s,combatEfficiency:a,magicKnowledge:n,img:i,sounds:r}){this.id=t,this.name=e,this.currentHealth=s,this.combatEfficiency=a,this.magicKnowledge=n,this.image=i,this.sounds=r,this.dualSpecialization=this.combatEfficiency===this.magicKnowledge,this.maxHealth=s,this.cooldows={healing:2},this.animationsFlags={blocked:!1,smallHit:!1,bigHit:!1,heal:!1,dead:!1}}playSound(t){new Audio(this.sounds[t]).play()}animationsEnded(){return new Promise((t=>{const e=()=>{let s=!0;for(const t in this.animationsFlags)if(Object.hasOwnProperty.call(this.animationsFlags,t)&&this.animationsFlags[t]){s=!1;break}s?t():setTimeout(e,100)};e()}))}executeAttack(){const t=c(50,150),e=Math.round(t*this.combatEfficiency/100);return this.playSound("attack"),e}castSpell(){const t=c(30,180),e=Math.round(t*this.magicKnowledge/100);return this.playSound("spell"),e}healSelf(){const t=c(10,50),e=Math.round(t*this.maxHealth/100);return this.cooldows.healing=3,this.setAnimationsFlag("heal",!0),setTimeout((()=>this.setAnimationsFlag("heal",!1)),1e3),this.currentHealth+e>this.maxHealth?this.maxHealth:this.currentHealth+e}setAttribute(t,e){this[t]=e}getAttribute(t){return this[t]}mainSkill(){return this.combatEfficiency>this.magicKnowledge?r.MELEE:r.MAGIC}setHealth(t){this.currentHealth=t}async takeDamage(t){this.currentHealth-=t,t>.4*this.maxHealth?(this.setAnimationsFlag("bigHit",!0),setTimeout((()=>this.setAnimationsFlag("bigHit",!1)),1e3)):(this.setAnimationsFlag("smallHit",!0),setTimeout((()=>this.setAnimationsFlag("smallHit",!1)),1e3)),await this.animationsEnded()}isDead(){return this.currentHealth<=0&&(this.setAnimationsFlag("dead",!0),setTimeout((()=>this.setAnimationsFlag("dead",!1)),1e3)),this.currentHealth<=0}getHighestSpec(){return Math.max(this.combatEfficiency,this.magicKnowledge)}setCooldown(t,e=0){e<0||(this.cooldows[t]=e)}setAnimationsFlag(t,e=!1){this.animationsFlags[t]=e}getAnimationsFlag(t){return this.animationsFlags[t]}getCooldown(t){return this.cooldows[t]}isAttackBlocked(t){const e=this.getAttribute(t)/4,s=c(0,100);return s<=e&&(this.setAnimationsFlag("blocked",!0),setTimeout((()=>this.setAnimationsFlag("blocked",!1)),1e3),!0)}}class u extends d{constructor(t){super(t),this.setCooldown("special",6)}specialAttack(){const t=c(100,300),e=Math.round(t*this.getHighestSpec()/100);return this.playSound("attack"),this.cooldows.special=7,e}regenerateInjures(){this.currentHealth+.5*this.maxHealth>this.maxHealth?this.setHealth(this.maxHealth):this.setHealth(this.currentHealth+.5*this.maxHealth)}}class h extends d{constructor({level:t,...e}){super({...e}),this.level=t}drawRandomAction(t){const e=!!this.getCooldown("healing"),s=()=>t.dualSpecialization?this.mainSkill():t.combatEfficiency>t.magicKnowledge?r.MAGIC:r.MELEE;if(e)return s();const a=Math.floor(this.currentHealth/this.maxHealth*100),n={[s()]:100,[r.HEAL]:Math.max(0,10+10*Math.floor((75-a)/10))};t.currentHealth<=this.getHighestSpec()&&(n.HEAL=n.HEAL/5);const i=[];for(const[r,l]of Object.entries(n))for(let t=0;t<l;t++)i.push(r);const o=c(0,i.length-1);return i[o]}}var m=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("transition",{attrs:{name:"slide",mode:"out-in",appear:""}},[s("div",{staticClass:"card animate__animated",class:{animate__headShake:t.char.getAnimationsFlag("smallHit"),animate__wobble:t.char.getAnimationsFlag("bigHit"),animate__slideOutUp:t.char.getAnimationsFlag("dead")}},[s("div",{staticClass:"card__image",class:{dead:t.heroDead}},[s("img",{attrs:{src:t.char.image,alt:t.char.name}})]),t.char.level?s("div",{staticClass:"card__level"},[t._v(" level "+t._s(t.char.level)+" ")]):s("div",{staticClass:"card__level"},[t._v("hero")]),s("div",{staticClass:"card__name"},[t._v(t._s(t.char.name))]),t.char.getAnimationsFlag("blocked")?s("div",{staticClass:"block"},[s("img",{staticClass:"block__img animate__animated animate__flash",attrs:{src:"assets/items/shield.png",alt:"shield"}})]):t._e(),t.char.getAnimationsFlag("heal")?s("div",{staticClass:"heal"},[s("img",{staticClass:"heal__img animate__animated animate__flash",attrs:{src:"assets/items/plus.png",alt:"heal"}})]):t._e(),s("HealthBar",{attrs:{color:"#42B782"},model:{value:t.percentageValue,callback:function(e){t.percentageValue=e},expression:"percentageValue"}}),s("div",{staticClass:"card__stats"},[s("div",{staticClass:"one-third",class:"one-third--"+t.char.name},[s("div",{staticClass:"stat"},[t._v("HP")]),s("div",{staticClass:"stat-value"},[t._v(t._s(t.char.currentHealth))])]),s("div",{staticClass:"one-third",class:"one-third--"+t.char.name},[s("div",{staticClass:"stat"},[t._v("Combat")]),s("div",{staticClass:"stat-value"},[t._v(t._s(t.char.combatEfficiency))])]),s("div",{staticClass:"one-third",class:"one-third--"+t.char.name},[s("div",{staticClass:"stat"},[t._v("Magic")]),s("div",{staticClass:"stat-value"},[t._v(t._s(t.char.magicKnowledge))])])])],1)])},g=[],v=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"healthbar"},[s("div",{staticClass:"healthbar-percentage",style:t.healthBarStyles})])},p=[],f={props:{value:{type:Number},color:{type:String}},computed:{healthBarStyles(){return{width:this.value+"%",backgroundColor:this.value>50?this.color:"#CC0000"}}}},w=f,_=s(1001),b=(0,_.Z)(w,v,p,!1,null,"7ea0acf8",null),k=b.exports,H={name:"CharacterCard",components:{HealthBar:k},props:["char"],computed:{percentageValue(){return this.heroDead?0:100*this.char.currentHealth/this.char.maxHealth},heroDead(){return this.char.currentHealth<=0}}},C=H,y=(0,_.Z)(C,m,g,!1,null,"b72972c8",null),A=y.exports,E=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("button",{class:{unavailable:t.disabled},attrs:{disabled:t.disabled},on:{click:function(e){return t.$emit("click",e)}}},[t._t("default")],2)},M=[],F={props:["disabled"]},T=F,L=(0,_.Z)(T,E,M,!1,null,"9be26eb8",null),S=L.exports,x={name:"App",data(){return{currentHero:"",currentMonster:"",heroesPool:o,monstersPool:[],currentMonsterLevel:1,defeatedMonsters:0,lastActions:[],availableCredits:0,isGame:!1,currentTurn:"hero",isCreditsManagerOpen:!1,actionList:null,publicPath:"/turnbasedgame/",allMonsters:l,ACTIONS_ENUM:r,activeTurn:!1}},components:{CharacterCard:A,FancyButton:S},methods:{createHero(t){this.currentHero=new u(o[t-1])},createMonster(){if(0===this.monstersPool.length)return void(this.isGame=!1);const t=c(0,this.monstersPool.length);this.currentMonster=new h(this.monstersPool[t])},startGame(t){this.resetGame(),this.createHero(t),this.createMonster()},resetGame(){this.defeatedMonsters=0,this.availableCredits=0,this.lastActions=[],this.currentHero="",this.currentMonster="",this.currentMonsterLevel=1,this.monstersPool=this.allMonsters.filter((t=>t.level===this.currentMonsterLevel)),this.isGame=!0},toggleCreditsManager(){this.isCreditsManagerOpen=!this.isCreditsManagerOpen},monsterDead(){new Audio(this.currentMonster.sounds.dead).play(),this.availableCredits+=5,this.currentHero.regenerateInjures(),this.addActionToLog({type:"monster",msg:"died"}),this.addActionToLog({type:"hero",msg:"regenerated"}),this.monstersPool=this.allMonsters.filter((t=>t.level===this.currentMonsterLevel&&t.id!==this.currentMonster.id)),this.createMonster()},updateHeroStats(t){this.availableCredits>0&&(this.availableCredits--,"currentHealth"===t?(this.currentHero.setHealth(this.currentHero[t]+3),this.currentHero.setAttribute("maxHealth",this.currentHero.maxHealth+3)):this.currentHero.setAttribute(t,this.currentHero[t]+1))},addActionToLog(t){this.lastActions.unshift(`${t.type} ${t.msg}`)},heroTurn(t){let e=0,s=0,a="combatEfficiency";t===r.MELEE?(e=this.currentHero.executeAttack(),a="combatEfficiency",this.addActionToLog({type:"hero",msg:`attacked for ${e}`})):t===r.MAGIC?(e=this.currentHero.castSpell(),a="magicKnowledge",this.addActionToLog({type:"hero",msg:`casted a spell for ${e} damage`})):t===r.SPECIAL&&(e=this.currentHero.specialAttack(),a=this.currentHero.mainSkill()===r.MELEE?"combatEfficiency":"magicKnowledge",this.addActionToLog({type:"hero",msg:`dealt ${e} damage with special attack`})),t===r.HEAL&&(s=this.currentHero.healSelf(),this.addActionToLog({type:"hero",msg:`healed to ${s} HP`})),e>0&&!this.currentMonster.isAttackBlocked(a)&&this.currentMonster.takeDamage(e),s>0&&this.currentHero.setHealth(s),this.endTurn()},monsterTurn(t){let e=0,s=0,a="combatEfficiency";t===r.MELEE?(e=this.currentMonster.executeAttack(),a="combatEfficiency",this.addActionToLog({type:"monster",msg:`attacked for ${e}`})):t===r.MAGIC&&(e=this.currentMonster.castSpell(),a="magicKnowledge",this.addActionToLog({type:"monster",msg:`casted a spell for ${e} damage`})),t===r.HEAL&&(s=this.currentMonster.healSelf(),this.addActionToLog({type:"monster",msg:`healed to ${s} HP`})),e>0&&!this.currentHero.isAttackBlocked(a)&&this.currentHero.takeDamage(e),s>0&&this.currentMonster.setHealth(s),this.endTurn()},async endTurn(){this.activeTurn=!0,this.currentHero.isDead()&&(new Audio(this.currentHero.sounds.dead).play(),this.isGame=!1),"hero"===this.currentTurn?(this.currentHero.setCooldown("healing",this.currentHero.getCooldown("healing")-1),this.currentHero.setCooldown("special",this.currentHero.getCooldown("special")-1)):this.currentMonster.setCooldown("healing",this.currentMonster.getCooldown("healing")-1),this.currentMonster.isDead()?(this.defeatedMonsters++,this.defeatedMonsters%2===0&&this.defeatedMonsters>0&&this.currentMonsterLevel++,await this.currentMonster.animationsEnded(),this.monsterDead(),this.currenTurn="hero"):("hero"===this.currentTurn?this.currentTurn="monster":this.currentTurn="hero","monster"===this.currentTurn&&this.monsterTurn(this.currentMonster.drawRandomAction(this.currentHero))),this.activeTurn=!1}}},K=x,O=(0,_.Z)(K,n,i,!1,null,null,null),D=O.exports;a.Z.config.productionTip=!1,new a.Z({render:t=>t(D)}).$mount("#app")}},e={};function s(a){var n=e[a];if(void 0!==n)return n.exports;var i=e[a]={exports:{}};return t[a](i,i.exports,s),i.exports}s.m=t,function(){var t=[];s.O=function(e,a,n,i){if(!a){var r=1/0;for(d=0;d<t.length;d++){a=t[d][0],n=t[d][1],i=t[d][2];for(var o=!0,l=0;l<a.length;l++)(!1&i||r>=i)&&Object.keys(s.O).every((function(t){return s.O[t](a[l])}))?a.splice(l--,1):(o=!1,i<r&&(r=i));if(o){t.splice(d--,1);var c=n();void 0!==c&&(e=c)}}return e}i=i||0;for(var d=t.length;d>0&&t[d-1][2]>i;d--)t[d]=t[d-1];t[d]=[a,n,i]}}(),function(){s.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return s.d(e,{a:e}),e}}(),function(){s.d=function(t,e){for(var a in e)s.o(e,a)&&!s.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})}}(),function(){s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){var t={143:0};s.O.j=function(e){return 0===t[e]};var e=function(e,a){var n,i,r=a[0],o=a[1],l=a[2],c=0;if(r.some((function(e){return 0!==t[e]}))){for(n in o)s.o(o,n)&&(s.m[n]=o[n]);if(l)var d=l(s)}for(e&&e(a);c<r.length;c++)i=r[c],s.o(t,i)&&t[i]&&t[i][0](),t[i]=0;return s.O(d)},a=self["webpackChunkturnbasedgame"]=self["webpackChunkturnbasedgame"]||[];a.forEach(e.bind(null,0)),a.push=e.bind(null,a.push.bind(a))}();var a=s.O(void 0,[998],(function(){return s(3998)}));a=s.O(a)})();
//# sourceMappingURL=app.76209d7a.js.map